let app = new Vue({
    el: '#app',
    data: {
        selected: 'Bartender/Pincér/Szakács',
        matrix: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 10, 0, 0, 2, 0, 0, 2, 0, 0, 6, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 0, 0, 0, 2, 0, 1, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 2, 0, 1, 1, 2, 1, 1, 0, 1, 12, 0, 0, 0, 5, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 5, 6, 2, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 6, 1, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 4, 0, 0, 1, 0, 14, 12, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 10, 0, 0, 12, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 3, 0, 2, 0, 1, 7, 0, 0, 0, 10, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 10, 0, 1, 0, 0, 0, 0, 0, 2, 14]],
        isSelected: false,
        current: 0,

        jobs: undefined,
        jobs_HU: ["Bartender/Pincér/Szakács", "Eladó/Ügynök/Recepciós", "Fodrász/Kozmetikus", "Igazgató/Vállalkozó",
        "Informatikus", "Irodai alkalmazott", "Közalkalmazott", "Médiamunkás", "Mérnök/Műépítész", "Nevelő/Au pair/Önkéntes",
        "Orvos/Gyógyszerész", "Raktáros/logisztikus", "Sofőr", "Sportoló/Edző/Bíró", "Szakmunkás", "Tanár/Kutató",
        "Ügyvéd/Közjegyző", "Zenész/Művész", "Más"],
        jobs_EN: ["Bartender/Waiter/Cook", "Seller/Agent/Receptionist", "Hairdresser/Beautician", "Manager/Contractor",
        "IT Specialist", "Office staff", "Public servant", "Media worker", "Engineer/Architect", "Nurser/Au Pair/Volunteer",
        "Doctor/Pharmacist", "Storer/Logistics", "Driver", "Sportsmen/Coach/Referee", "Workman", "Teacher/Researcher",
        "Lawyer/Notary", "Musician/Artist", "Other"],
        jobs_RO: ["Barman/Chelner/Bucătar", "Vânzător/Agent/Recepționer", "Coafor/Cosmetician", "Director/Contractant",
        "IT Specialist", "Lucrător de birou", "Funcționar Public", "Lucrător mass-media", "Inginer/Architect", "Guvernant/Au Pair/Voluntar",
        "Medic/Farmacist", "Muncitor depozit/Logistică", "Șofer", "Atlet/Antrenor/Mareșal", "Muncitor calificat", 
        "Profesor/Cercetător", "Avocat/Notar", "Musician/Artist", "Alte"],

        title: undefined,
        title_HU: "Munkakörök és elvándorlások közti kapcsolat megfigyelése Székelyföldön",
        title_RO: "Analizarea relației între locuri de muncă și migrațiune la Székelyföld",
        title_EN: "Analysing the relation between working and migration on Székelyföld",

        tab_title: undefined,
        tab_title_HU: "Munka és tanulás Székelyföldön",
        tab_title_RO: "Muncă și migrațiune la Székelyföld",
        tab_title_EN: "Work and migration on Székelyföld",

        expl: undefined,
        expl_HU: "A vizualizáció az <a href='http://csaladenes.egologo.transindex.ro/?p=1129'>I. Székelydata adavtizualizációs pályázatra</a>  benyújtott pályamunka továbbfejlesztése. \n Az <a href='https://szekelydata.csaladen.es/verseny/data.json'>adatok</a> székelyföldiek nyilvános Facebook profiljairól lettek begyűjtve 2015-ben. (a neveket fiktív nevekre cserélték). A vizualizáció csupán tendenciákat sejtet, nem egzakt tényeket mutat be. \n Az alábbi ábrán a külső körök fölé tartva a kurzort, megfigyelhetjük az elvándorlás mértékét az illető város és munkakör kapcsán. \n A mindkét városnál vastagabb végű körívek azt jelzik, hogy kölcsönös átvándorlásról van szó. A szám a város mellett jelzi, hogy hányan vannak onnan.",
        expl_RO: "Vizualizarea este continuarea proiectului prezentat la <a href='http://csaladenes.egologo.transindex.ro/?p=1129'>I. concurs de vizualizarea datelor Székelydata</a>. \n <a href='https://szekelydata.csaladen.es/verseny/data.json'>Datele</a> sunt datele publice colectate de pe Facebook despre oameni provenite din Transilvania, din anul 2015. (numele au fost înlocuite cu nume fictive). Vizualizarea ne prezintă numai tendenții, nu fapte egzacte.  Pe diagramul de mai jos, deplasând cursorul peste cercuri externe putem să vedem măsura migrației în legătură cu orașul și locul de muncă selectat. Numărul lângă orașul ne arată câți provin din orașul respectiv.",
        expl_EN: "The visualization is the upgraded version of the project made for the <a href='http://csaladenes.egologo.transindex.ro/?p=1129'>I. Székelydata data visualization competition</a>.The <a href='https://szekelydata.csaladen.es/verseny/data.json'>dataset</a> is collected from public Facebook pages of transylvanian people, from 2015. (the names were exchanged with fictive names). The visualization shows us only tendency, not exact facts.  On the diagram below pointing on the outer circles with the cursor, we can see the measure of migration related to the selected city and job. The number near the city shows us how many people came from that city.",
    
        gone: undefined,
        gone_HU: "elment",
        gone_RO: "a plecat",
        gone_EN: "went",

        stayed: undefined,
        stayed_HU: "maradt",
        stayed_RO: "a rămas",
        stayed_EN: "stayed",
        
        come: undefined,
        come_HU: "jött",
        come_RO: "a venit",
        come_EN: "came",

        places: undefined,
        places_HU: [ 'Amerika', 'Balánbánya', 'Barót',   'Csíkszereda', 'Európa',  'Gyergyószentmiklós', 'Kolozsvár', 'Kovászna', 'Kézdivásárhely', 'Magyarország', 'Maroshévíz', 'Marosvásárhely', 'Más',     'Más románia város', 'Parajd',  'Segesvár', 'Sepsiszentgyörgy', 'Szentegyháza', 'Szováta', 'Szászrégen', 'Székelykeresztúr', 'Székelyudvarhely'],
        places_RO: ['America', 'Bălan', 'Baraolt', 'Miercurea Ciuc', 'Europa', 'Gheorgheni', 'Cluj Napoca', 'Covasna', 'Târgu Secuiesc', 'Ungaria', 'Toplița', 'Târgu Mureș', 'Alte', 'Alte orașe din România', 'Praid', 'Sighișoara', 'Sfântu Gheorghe', 'Vlăhița', 'Sovata', 'Reghin', 'Cristuru Secuiesc', 'Odorheiu Secuiesc']
    },

    watch: {

        selected() {
            event.preventDefault();
            console.log(this.selected);
            if(["Bartender/Pincér/Szakács", "Bartender/Waiter/Cook", "Barman/Chelner/Bucătar"].includes(this.selected))
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 10, 0, 0, 2, 0, 0, 2, 0, 0, 6, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 0, 0, 0, 2, 0, 1, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 2, 0, 1, 1, 2, 1, 1, 0, 1, 12, 0, 0, 0, 5, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 5, 6, 2, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 6, 1, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 4, 0, 0, 1, 0, 14, 12, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 10, 0, 0, 12, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 3, 0, 2, 0, 1, 7, 0, 0, 0, 10, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 10, 0, 1, 0, 0, 0, 0, 0, 2, 14]]
            else if(["Eladó/Ügynök/Recepciós", "Seller/Agent/Receptionist", "Vânzător/Agent/Recepționer"].includes(this.selected)) 
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 0, 6, 0, 0, 1, 0, 0, 1, 0, 2, 32, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 10, 0, 0, 0, 0, 1, 1, 6, 0, 1, 6, 0, 0, 0, 3, 0, 0, 0, 1, 0], [0, 0, 0, 29, 0, 0, 2, 1, 0, 5, 0, 0, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 13, 1, 0, 0, 1, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 2, 63, 0, 0, 1, 0, 1, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 2, 0, 1, 5, 10, 8, 2, 0, 2, 15, 0, 0, 0, 27, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 6, 22, 4, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 24, 4, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 2, 0, 0, 11, 0, 0, 7, 0, 69, 13, 0, 0, 0, 0, 0, 1, 1, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 3, 14, 0, 0, 33, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 4, 4, 1, 5, 0, 2, 9, 0, 0, 0, 37, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0, 0, 0, 14, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 10, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 13, 14, 0, 0, 1, 1, 0, 0, 36, 0, 0], [0, 0, 0, 0, 0, 1, 3, 0, 0, 7, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 18, 9], [0, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 3, 36]]
            else if(["Fodrász/Kozmetikus", "Hairdresser/Beautician", "Coafor/Cosmetician"].includes(this.selected))
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 6, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 5, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 14, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 12, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 16]]
            else if(["Igazgató/Vállalkozó", "Manager/Contractor", "Director/Contractant"].includes(this.selected))	
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 10, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1], [0, 0, 0, 39, 0, 0, 7, 1, 0, 11, 0, 2, 17, 0, 0, 0, 3, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 27, 1, 0, 0, 11, 0, 1, 12, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 231, 0, 0, 2, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 2, 4, 0, 0, 6, 10, 12, 7, 0, 4, 33, 0, 0, 0, 35, 1, 0, 0, 0, 0], [2, 0, 0, 1, 0, 1, 2, 5, 35, 3, 0, 1, 12, 0, 0, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 8, 0, 0, 0, 28, 5, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 2, 0, 0, 24, 0, 0, 9, 0, 96, 24, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 20, 0, 1, 0, 0, 13, 29, 0, 0, 26, 0, 0, 0, 0, 0, 0], [0, 0, 2, 4, 0, 0, 3, 3, 3, 7, 0, 1, 17, 0, 0, 0, 46, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 14, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 11, 0, 0, 0], [0, 0, 0, 0, 0, 0, 12, 0, 0, 2, 0, 14, 16, 0, 0, 0, 0, 0, 0, 32, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 3, 7, 0, 0, 0, 0, 0, 0, 0, 18, 6], [1, 0, 0, 2, 0, 2, 3, 0, 0, 8, 0, 4, 16, 0, 1, 0, 2, 1, 0, 0, 0, 36]]
            else if(["Informatikus", "IT Specialist"].includes(this.selected))
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 0, 0, 12, 0, 0, 4, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 3, 7, 0, 0, 3, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 52, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 14, 0, 0, 3, 0, 30, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 2, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 6, 4, 0, 0, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 6]]
            else if(["Irodai alkalmazott", "Office staff", "Lucrător de birou"].includes(this.selected))
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 7, 0, 0, 1, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 17, 0, 0, 2, 0, 0, 5, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 14, 0, 0, 0, 4, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 3, 0, 3, 3, 0, 2, 7, 0, 0, 0, 9, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 2, 14, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 7, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 12, 0, 0, 1, 0, 35, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 2, 9, 0, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 1, 2, 0, 0, 2, 0, 2, 4, 0, 0, 0, 15, 0, 0, 0, 1, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 6, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 3, 5, 0, 0, 0, 1, 0, 1, 11, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 8, 3], [0, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 1, 9]]
            else if(["Közalkalmazott", "Public servant", "Funcționar Public"].includes(this.selected))
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 2, 1], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6]]
            else if(["Médiamunkás", "Media worker", "Lucrător mass-media"].includes(this.selected))		
                this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 7, 0, 0, 10, 0, 0, 2, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 44, 0, 0, 1, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 3, 3, 1, 0, 1, 6, 0, 0, 0, 9, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 7, 0, 0, 1, 0, 22, 9, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 0, 0, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 12]]
		    else if(["Mérnök/Műépítész", "Engineer/Architect", "Inginer/Architect"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 11, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 48, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 1, 0, 0, 3, 1, 4, 2, 0, 1, 10, 0, 0, 0, 11, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 9, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 0, 0, 3, 0, 17, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0, 4, 0, 0, 0, 9, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 1, 0, 3, 4, 0, 0, 0, 0, 0, 1, 3, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 18]]
	        else if(["Nevelő/Au pair/Önkéntes", "Nurser/Au Pair/Volunteer", "Guvernant/Au Pair/Voluntar"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 0, 0, 0, 2, 1, 4, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0], [0, 0, 0, 20, 0, 0, 0, 0, 0, 1, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 16, 1, 0, 0, 6, 0, 1, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 24, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 3, 5, 2, 2, 0, 2, 11, 0, 0, 0, 9, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 7, 12, 2, 0, 3, 2, 0, 0, 0, 3, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 4, 0, 0, 2, 0, 17, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 8, 0, 0, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 2, 1, 3, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 13, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 3, 9, 0, 0, 0, 0, 0, 0, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 10, 6], [0, 0, 0, 1, 0, 0, 5, 0, 0, 3, 0, 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 18]]
		    else if(["Orvos/Gyógyszerész", "Doctor/Pharmacist", "Medic/Farmacist"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 12, 0, 0, 1, 0, 0, 5, 0, 5, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 2, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 36, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0, 2, 2, 2, 4, 0, 16, 15, 0, 0, 0, 9, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 8, 4, 0, 0, 0, 1, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 3, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 3, 0, 0, 2, 0, 0, 2, 0, 77, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 4, 0, 0, 6, 0, 0, 0, 2, 0, 0], [0, 0, 0, 2, 0, 0, 0, 3, 0, 6, 0, 13, 7, 0, 0, 0, 13, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 15, 7, 0, 0, 0, 0, 0, 0, 17, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 5, 1, 0, 0, 0, 0, 1, 0, 0, 0, 7]]
		    else if(["Raktáros/logisztikus", "Storer/Logistics", "Muncitor depozit/Logistică"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3]]
		    else if(["Sofőr", "Driver", "Șofer"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 2, 0, 0, 0, 0, 3, 1, 2, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 0, 1], [0, 0, 0, 7, 0, 0, 0, 0, 0, 4, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 4, 3, 1, 0, 1, 3, 0, 0, 0, 10, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 14, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 11, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 6, 0, 0, 0, 1, 0, 0, 7, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 8, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0, 0, 0, 1, 4]]
		    else if(["Sportoló/Edző/Bíró", "Sportsmen/Coach/Referee", "Atlet/Antrenor/Mareșal"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 19, 0, 0, 2, 0, 0, 4, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 5, 4, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 35, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 1, 1, 0, 6, 1, 0, 0, 10, 0, 0, 0, 9, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 9, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 3, 0, 0, 3, 0, 16, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 9, 0, 0, 0, 0, 0, 1], [0, 0, 1, 2, 0, 1, 1, 0, 0, 4, 0, 1, 5, 0, 0, 0, 13, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 7, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 2, 5, 0, 0, 0, 0, 0, 0, 0, 1, 12]]
		    else if(["Szakmunkás", "Workman", "Muncitor calificat"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 17, 4, 0, 0, 0, 3, 0, 8, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 2], [0, 0, 0, 6, 0, 1, 0, 0, 0, 3, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 13, 0, 0, 0, 4, 0, 1, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 0, 0, 1, 5, 2, 2, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 11, 3, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 10, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 12, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0], [0, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 2, 3, 0, 0, 0, 0, 0, 0, 11, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 10, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3]]
		    else if(["Tanár/Kutató", "Teacher/Researcher", "Profesor/Cercetător"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 6, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 19, 0, 0, 0, 1, 4, 1, 3, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 0, 1], [1, 0, 0, 20, 0, 1, 3, 0, 0, 9, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 20, 0, 1, 0, 4, 0, 4, 7, 0, 0, 0, 0, 0, 0, 0, 0, 5], [0, 0, 0, 0, 0, 0, 45, 0, 0, 2, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 4, 1, 1, 7, 6, 7, 4, 0, 3, 6, 0, 0, 0, 29, 0, 0, 0, 0, 3], [0, 0, 0, 4, 0, 0, 3, 3, 23, 0, 0, 1, 3, 0, 0, 0, 4, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 11, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 11, 0, 0, 3, 0, 27, 7, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 5, 0, 0, 13, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 7, 2, 0, 8, 0, 1, 3, 0, 0, 0, 32, 0, 0, 0, 0, 1], [0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 7, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 6, 4, 0, 0, 0, 0, 0, 0, 18, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 7, 0, 0, 0, 0, 0, 0, 0, 18, 3], [0, 0, 0, 1, 0, 1, 3, 0, 0, 2, 0, 0, 8, 0, 0, 0, 0, 0, 1, 0, 2, 17]]
		    else if(["Ügyvéd/Közjegyző", "Lawyer/Notary", "Avocat/Notar"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]
		    else if(["Zenész/Művész", "Musician/Artist"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 22, 0, 1, 3, 0, 0, 2, 0, 2, 7, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 9, 2, 1, 0, 3, 0, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 50, 0, 0, 2, 0, 1, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 2, 0, 0, 5, 2, 3, 4, 0, 1, 6, 0, 0, 0, 14, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 1, 2, 8, 2, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 5, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 6, 0, 0, 5, 0, 15, 12, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 9, 0, 0, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 3, 0, 1, 5, 0, 0, 0, 17, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 9, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 1, 0, 2, 3, 0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 3]]
		    else if(["Más", "Other", "Altele"].includes(this.selected))
		    	this.matrix = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 25, 0, 3, 0, 1, 3, 1, 0, 1, 0, 1, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 24, 0, 0, 0, 1, 6, 0, 4, 0, 0, 20, 0, 0, 0, 6, 0, 0, 0, 0, 2], [0, 2, 0, 33, 1, 0, 2, 1, 0, 4, 0, 1, 27, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 45, 4, 1, 0, 13, 0, 3, 42, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 150, 0, 0, 4, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 3, 5, 0, 1, 11, 10, 20, 14, 0, 2, 61, 0, 0, 0, 36, 0, 0, 0, 0, 1], [1, 0, 0, 4, 0, 1, 1, 12, 55, 3, 0, 2, 33, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 1, 1, 0, 0, 2, 53, 10, 53, 0, 0, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 11, 1, 0, 7, 0, 107, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 16, 0, 0, 0, 1, 0, 0, 3], [1, 0, 0, 0, 1, 0, 13, 0, 0, 1, 0, 4, 62, 0, 0, 65, 0, 0, 0, 0, 1, 1], [1, 0, 2, 3, 0, 1, 8, 7, 4, 13, 0, 0, 34, 0, 0, 0, 58, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 2, 11, 0, 0, 0, 0, 26, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 6, 13, 0, 0, 0, 1, 0, 36, 0, 0, 0], [1, 0, 0, 1, 0, 1, 8, 0, 0, 1, 0, 11, 38, 0, 0, 0, 0, 0, 0, 55, 0, 0], [0, 0, 0, 0, 0, 1, 3, 1, 0, 13, 0, 4, 19, 0, 0, 0, 0, 0, 0, 0, 31, 3], [0, 0, 0, 0, 0, 0, 3, 0, 0, 9, 0, 1, 11, 0, 0, 1, 0, 0, 0, 0, 2, 35]]
                this.generateChord(this.gone, this.come, this.stayed, this.places);
            }
    },

    mounted() {
        this.jobs = this.jobs_HU;
        this.title = this.title_HU;
        this.expl = this.expl_HU;
        this.selected = this.jobs[0];
        this.come = this.come_HU;
        this.gone = this.gone_HU;
        this.stayed = this.stayed_HU;
        this.places = this.places_HU;
        this.tab_title = this.tab_title_HU;
        
        document.getElementsByTagName("title")[0].innerHTML = this.tab_title;
        document.getElementById("segitseg").innerHTML = this.expl;
        this.generateChord(this.gone, this.come, this.stayed, this.places);
    },

    methods: {

        changeLang(lang) {
            if (lang == "HU") {
                this.jobs = this.jobs_HU;
                this.title = this.title_HU;
                this.expl = this.expl_HU;
                this.gone = this.gone_HU;
                this.stayed = this.stayed_HU;
                this.come = this.come_HU;
                this.places = this.places_HU;
                this.tab_title = this.tab_title_HU;
            }
            else if (lang == 'RO') {
                this.jobs = this.jobs_RO;
                this.title = this.title_RO;
                this.expl = this.expl_RO;
                this.gone = this.gone_RO;
                this.stayed = this.stayed_RO;
                this.come = this.come_RO;
                this.places = this.places_RO;
                this.tab_title = this.tab_title_RO;
            }
            else if (lang == 'EN') {
                this.jobs = this.jobs_EN;
                this.title = this.title_EN;
                this.expl = this.expl_EN;
                this.gone = this.gone_EN;
                this.stayed = this.stayed_EN;
                this.come = this.come_EN;
                this.places = this.places_RO;
                this.tab_title = this.tab_title_EN;
            }
            this.selected = this.jobs[this.current];
            document.getElementById("segitseg").innerHTML = this.expl;
            document.getElementsByTagName("title")[0].innerHTML = this.tab_title;
        },
        
        generateChord(go, co, st, places) {
            d3.selectAll("svg > *").remove();
            d3.select("#chart").remove();
            
            var stays = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            var came = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            var count =[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            var went = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            
            for (var i = 1; i < 22; ++i) {
                stays[i] = this.matrix[i][i];
            }
        
            for (var i = 0; i < 22; ++i) {
                stays[i] = this.matrix[i][i]
                for (var j = 0; j < 22; ++j) {
                    came[i] = came[i] + this.matrix[j][i]
                    count[i] = count[i] + this.matrix[i][j];
                }
            }
        
            for (var i = 1; i < 22; ++i) {
                went[i] = count[i] - stays[i];
                came[i] = came[i] - stays[i];
            }

            var w = 1000;
            var h = 700;
            var margin = { top: 20, bottom: 0, left: 0, right: 0}
        
            var width = w - margin.left - margin.right;
            var height = h - margin.top - margin.bottom ;
        
            var svg = d3.select("#chord")
                .append("svg")
                .attr("id", "chart")
                .attr("width", w)
                .attr("height", 1000)
        
            var wrapper = svg.append("g")
                .attr("transform", "translate(" + width / 2 + "," + (height + 300) / 2 + ")")
        
            var outerRadius = Math.min(width, height) * 0.5 -55
            var innerRadius = outerRadius - 30
        
            var Names = places;//[ 'Amerika', 'Balánbánya', 'Barót',   'Csíkszereda', 'Európa',  'Gyergyószentmiklós', 'Kolozsvár', 'Kovászna', 'Kézdivásárhely', 'Magyarország', 'Maroshévíz', 'Marosvásárhely', 'Más',     'Más románia város', 'Parajd',  'Segesvár', 'Sepsiszentgyörgy', 'Szentegyháza', 'Szováta', 'Szászrégen', 'Székelykeresztúr', 'Székelyudvarhely']
            var colors = ["#8d6e63", "#ef5350",    "#d32f2f", "#ffa726",     "#ffca28", "#558b2f",            "#1e88e5",   "#cddc39",  "#64b5f6",        "#d32f2f",   "#3f51b5"   ,   "#7cb342",        "#ff1744", "#ffeb3b",           "#f48fb1", "#d81b60",  "#ab47bc",          "#26a69a",      "#ce93d8", "#ff4081",    "#fdd835",          "#ff7043"]
            var opacity = [0.3, 0.3, 0.3, 0.3, 0.3, 0.3]
             
            var chordGenerator = d3.chord()
			    .padAngle(0.04)
			    .sortSubgroups(d3.descending)
			    .sortChords(d3.descending)
			    .sortGroups(d3.descending) //rendezes

            var chord = chordGenerator(this.matrix);

            var arcs = d3.arc()
			    .innerRadius(innerRadius)
			    .outerRadius(outerRadius);

            var ribbon = d3.ribbon()
			    .radius(250)

            var opacities = d3.scaleOrdinal()
		    	.domain(d3.range(22))
		    	.range(opacity)

            var color = d3.scaleOrdinal()
		    	.domain(d3.range(22))
                .range(colors)
                
		    function getGradID(d) { return d.source.index; }
        
            var grads = svg.append("defs")
                .selectAll("linearGradient")
                .data(chord)
                .enter()
                .append("linearGradient")
                .attr("id", getGradID)
                .attr("gradientUnits", "userSpaceOnUse")
                //.attr("x1", function(d, i){ return innerRadius * Math.cos((d.source.endAngle-d.source.startAngle) / 2 + d.source.startAngle - Math.PI/2); })
                //.attr("y1", function(d, i){ return innerRadius * Math.sin((d.source.endAngle-d.source.startAngle) / 2 + d.source.startAngle - Math.PI/2); })
                //.attr("x2", function(d, i){ return innerRadius * Math.cos((d.target.endAngle-d.target.startAngle) / 2 + d.target.startAngle - Math.PI/2); })
                //.attr("y2", function(d, i){ return innerRadius * Math.sin((d.target.endAngle-d.target.startAngle) / 2 + d.target.startAngle - Math.PI/2); })

            // set the starting color (at 0%)
            grads.append("stop")
                .attr("offset", "100%")
                .attr("stop-color", function(d){ return color(d.source.index)})

            //set the ending color (at 100%)
            grads.append("stop")
                .attr("offset", "0%")
                .attr("stop-color", function(d){ return color(d.target.index)})	  
            
              // making the ribbons
            d3.select("g")
                .selectAll("path")
            
                .data(chord)
                .enter()
                .append("path")
                .attr("class", function(d) { return "chord chord-" + d.source.index + " chord-" + d.target.index })// The first chord allows us to select all of them. The second chord allows us to select each individual one. 
                .style("fill", function(d){ return "url(#" + getGradID(d) + ")"; })
                .attr("d", ribbon)
                .style("stroke", function(d){ return d3.rgb(color(d.source.index)).darker(); }) //target a szinatmenethez
                .style("opacity", 1)
			
		

            // making the arcs
            var g = wrapper.selectAll("g")
                .data(chord.groups)
                .enter()
                .append("g")
                .attr("class", "group")    

            g.append("path")
                .style("fill", function(d){ return color(d.index)})
                .style("stroke", function(d){ return d3.rgb(color(d.index)).darker(); })
                .attr("d", arcs)
                .style("opacity", 1)
		    	.on("mouseover", fade(0.08))
                .on("mouseout", fade(1))
		    	.append("svg:title")
                    .text(function(d, i) { return go + ": " + went[i] + "\n" + st + ": " + stays[i] + "\n" + co + ": " + came[i]; });

            /// adding labels
            g.append("text")
                .each(function(d){ d.angle = (d.startAngle + d.endAngle) / 2; })
                .attr("dy", ".35em")
                .attr("class", "titles")
                .attr("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
                .attr("transform", function(d) {
		    		return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")" + "translate(" + (outerRadius + 10) + ")" + (d.angle > Math.PI ? "rotate(180)" : "");})
                .text(function(d,i){ return Names[i]  + " " + count[i];})
                .style("font-size", "15px")
              // })
            function fade(opacity) {
                return function(d,i) {
		    		svg.selectAll("path.chord")
                        .filter(function(d) { return d.source.index != i && d.target.index != i; })
                        .transition()
                        .style("opacity", opacity);
                };			   	
            }
        }
    },
})
